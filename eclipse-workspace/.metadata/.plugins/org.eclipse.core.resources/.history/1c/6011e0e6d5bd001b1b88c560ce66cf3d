

import java.io.*;
import java.util.ArrayList;
import java.util.HashMap;

public class Main {
    static int N_MAX = 10000 + 1;
    static HashMap<Integer, Integer> DP = new HashMap<Integer, Integer>();
    static ArrayList<Integer> result;

    static int D(int n){

        if(n > 10000) return 0;
        if(DP.containsKey(n)) return DP.get(n);

        String temp = Integer.toString(n);
        int answer = n;

        for(int i = 0; i < temp.length(); i++){
            
            answer += Integer.parseInt(temp.substring(i, i + 1));

        }
        
        DP.put(answer, answer);


        return DP.get(answer);
    }

    static void Solution() throws IOException{

        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        
        for(int i = 1; i < N_MAX; i++){

            D(i);

        }

        for(int i = 1; i < N_MAX; i++){

            if(!DP.containsKey(i)) result.add(i);
            
        }

        for(int i = 0; i < result.size(); i++){

            bw.write(result.get(i) +"\n");

        }

        bw.flush();
        bw.close();

    }

    static void Solve() throws IOException{

        Solution();

    }

    public static void main(String[] args) throws IOException {
        
        Solve();

    }

}
