#include <iostream>
#include <vector>

#define N_MAX 100 + 1

using namespace std;

int N;
int P[N_MAX] = {0, };
int result = 0;

// LCM : a * b = gcd(a, b) * lcm(a, b) -> lcm(a, b) = a * b / gcd(a, b)
int gcd(int a, int b){  // Euclidean algorithm

    int c;
    while(b != 0){

        c = a % b;
        a = b;
        b = c;

    }
    return a;

}


void Input(){

    cin >> N;

    for(int i = 1; i <= N; i++){

        cin >> P[i];

    }

}

void Solution(){

    bool primeNum = false;

    for(int i = 1; i <= N; i++){

        for(int j = 2; j < P[i]; j++){

            if(gcd(j, P[i]) != 1) { primeNum = false; break; }
            else if(gcd(j, P[i] == 1)) primeNum = true;

        }

        if(primeNum) result++;

    }

    cout << result << endl;

}

void Solve(){

    Input();

    Solution();

}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    Solve();

    return 0;

}
